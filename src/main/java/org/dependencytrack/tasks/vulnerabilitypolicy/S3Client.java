package org.dependencytrack.tasks.vulnerabilitypolicy;

import alpine.Config;
import alpine.common.logging.Logger;
import io.minio.MinioClient;
import org.dependencytrack.common.ConfigKey;

public class S3Client {
    private final String fileToFetch;
    private final String s3AccessKey;
    private final String s3SecretKey;
    private final String s3BucketName;
    private MinioClient minioClient;

    public String getFileToFetch() {
        return fileToFetch;
    }

    public String getS3AccessKey() {
        return s3AccessKey;
    }


    public String getS3SecretKey() {
        return s3SecretKey;
    }

    public String getS3BucketName() {
        return s3BucketName;
    }

    private static final Logger LOGGER = Logger.getLogger(S3Client.class);

    public S3Client() {
        this.fileToFetch = Config.getInstance().getProperty(ConfigKey.VULNERABILITY_POLICY_S3_FILE_NAME);
        this.s3AccessKey = Config.getInstance().getProperty(ConfigKey.VULNERABILITY_POLICY_S3_ACCESS_KEY);
        this.s3SecretKey = Config.getInstance().getProperty(ConfigKey.VULNERABILITY_POLICY_S3_SECRET_KEY);
        this.s3BucketName = Config.getInstance().getProperty(ConfigKey.VULNERABILITY_POLICY_S3_BUCKET_NAME);
        if (fileToFetch == null || s3BucketName == null || s3SecretKey == null || s3AccessKey == null) {
            LOGGER.error("The required parameters for S3 file access have not been provided. Please check");
        }
    }

    private void createClient() {
        this.minioClient = MinioClient.builder().endpoint(Config.getInstance().getProperty(ConfigKey.VULNERABILITY_POLICY_FETCH_URL))
                .credentials(s3AccessKey, s3SecretKey)
                .build();
    }

    public MinioClient getMinioClient() {
        if (this.minioClient == null) {
            createClient();
        }
        return minioClient;
    }

}
