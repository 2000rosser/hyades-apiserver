package org.dependencytrack.persistence.jdbi;

import org.dependencytrack.persistence.jdbi.mapping.VulnPolicyAnalysisArgumentFactory;
import org.dependencytrack.persistence.jdbi.mapping.VulnPolicyRatingsArgumentFactory;
import org.dependencytrack.persistence.jdbi.mapping.VulnerabilityPolicyRowMapper;
import org.jdbi.v3.sqlobject.config.RegisterArgumentFactories;
import org.jdbi.v3.sqlobject.config.RegisterArgumentFactory;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;

import java.util.List;

@RegisterArgumentFactories({
        @RegisterArgumentFactory(VulnPolicyAnalysisArgumentFactory.class),
        @RegisterArgumentFactory(VulnPolicyRatingsArgumentFactory.class)
})
@RegisterRowMapper(VulnerabilityPolicyRowMapper.class)
public interface VulnerabilityPolicyDao {

    @SqlQuery("""  
                    SELECT "ID", "ANALYSIS", "AUTHOR", "CONDITIONS", "CREATED", "DESCRIPTION", "NAME", "RATINGS", "UPDATED", "VALID_FROM", "VALID_UNTIL"
                	FROM "VULNERABILITY_POLICY";
            """)
    @RegisterRowMapper(VulnerabilityPolicyRowMapper.class)
    List<org.dependencytrack.policy.vulnerability.VulnerabilityPolicy> getAllVulnerabilityPolicies();

    @SqlQuery("""  
                SELECT "ID", "ANALYSIS", "AUTHOR", "CONDITIONS", "CREATED", "DESCRIPTION", "NAME", "RATINGS", "UPDATED", "VALID_FROM", "VALID_UNTIL"
                	FROM "VULNERABILITY_POLICY" WHERE "NAME" = ?;
            """)
    @RegisterRowMapper(VulnerabilityPolicyRowMapper.class)
    org.dependencytrack.policy.vulnerability.VulnerabilityPolicy getVulnerabilityPolicyByName(@Bind String name);

    @SqlUpdate("""
        INSERT INTO "VULNERABILITY_POLICY"(
                	"ANALYSIS", "AUTHOR", "CONDITIONS", "CREATED", "DESCRIPTION", "NAME", "RATINGS", "UPDATED", "VALID_FROM", "VALID_UNTIL")
             VALUES (:vulnerabilityPolicy.analysis::JSON, :vulnerabilityPolicy.author, :vulnerabilityPolicy.conditions, :vulnerabilityPolicy.created, :vulnerabilityPolicy.description, :vulnerabilityPolicy.name, :vulnerabilityPolicy.ratings::JSON, :vulnerabilityPolicy.updated, :vulnerabilityPolicy.validFrom, :vulnerabilityPolicy.validUntil)
       
    """)
    int createVulnerabilityPolicy(@BindBean("vulnerabilityPolicy") org.dependencytrack.policy.vulnerability.VulnerabilityPolicy vulnerabilityPolicy);

    @SqlUpdate("""
        DELETE FROM "VULNERABILITY_POLICY" WHERE "NAME" = ?     
        """)
    int deleteVulnerabilityPolicyByName(@Bind String name);
    @SqlUpdate("""
                UPDATE "VULNERABILITY_POLICY"
                	SET "ANALYSIS"=:vulnerabilityPolicy.analysis::JSON, "AUTHOR"=:vulnerabilityPolicy.author, "CONDITIONS"=:vulnerabilityPolicy.conditions, "DESCRIPTION"=:vulnerabilityPolicy.description, "RATINGS"=:vulnerabilityPolicy.ratings::JSON, "UPDATED"=:vulnerabilityPolicy.updated, "VALID_FROM"=:vulnerabilityPolicy.validFrom, "VALID_UNTIL"=:vulnerabilityPolicy.validUntil
                	WHERE "NAME" = :name
                """)
    int updateVulnerabilityPolicyByName(@BindBean("vulnerabilityPolicy") org.dependencytrack.policy.vulnerability.VulnerabilityPolicy vulnerabilityPolicy, @Bind String name);
}
