package org.dependencytrack.persistence.jdbi;

import org.dependencytrack.persistence.jdbi.mapping.VulnPolicyAnalysisArgumentFactory;
import org.dependencytrack.persistence.jdbi.mapping.VulnPolicyRatingsArgumentFactory;
import org.dependencytrack.persistence.jdbi.mapping.VulnerabilityPolicyRowMapper;
import org.dependencytrack.policy.vulnerability.VulnerabilityPolicy;
import org.jdbi.v3.sqlobject.config.RegisterArgumentFactories;
import org.jdbi.v3.sqlobject.config.RegisterArgumentFactory;
import org.jdbi.v3.sqlobject.config.RegisterRowMapper;
import org.jdbi.v3.sqlobject.customizer.Bind;
import org.jdbi.v3.sqlobject.customizer.BindBean;
import org.jdbi.v3.sqlobject.statement.SqlQuery;
import org.jdbi.v3.sqlobject.statement.SqlUpdate;

import java.util.List;

@RegisterArgumentFactories({
        @RegisterArgumentFactory(VulnPolicyAnalysisArgumentFactory.class),
        @RegisterArgumentFactory(VulnPolicyRatingsArgumentFactory.class)
})
@RegisterRowMapper(VulnerabilityPolicyRowMapper.class)
public interface VulnerabilityPolicyDao {

    @SqlQuery("""  
            SELECT * FROM "VULNERABILITY_POLICY";
            """)
    List<VulnerabilityPolicy> getAllVulnerabilityPolicies();

    @SqlQuery("""  
            SELECT * FROM "VULNERABILITY_POLICY" WHERE "NAME" = ?;
            """)
    VulnerabilityPolicy getVulnerabilityPolicyByName(@Bind String name);

    @SqlUpdate("""
            INSERT INTO "VULNERABILITY_POLICY"
              ("ANALYSIS", "AUTHOR", "CONDITIONS", "CREATED", "DESCRIPTION", "NAME", "RATINGS", "UPDATED", "VALID_FROM", "VALID_UNTIL")
            VALUES
              ((:analysis)::JSON, :author, :conditions, :created, :description, :name, (:ratings)::JSON, :updated, :validFrom, :validUntil)
            """)
    int createVulnerabilityPolicy(@BindBean VulnerabilityPolicy vulnerabilityPolicy);

    @SqlUpdate("""
            DELETE FROM "VULNERABILITY_POLICY" WHERE "NAME" = ?
            """)
    int deleteVulnerabilityPolicyByName(@Bind String name);

    @SqlUpdate("""
            UPDATE "VULNERABILITY_POLICY"
            SET
              "ANALYSIS" = :analysis::JSON,
              "AUTHOR" = :author,
              "CONDITIONS" = :conditions,
              "DESCRIPTION" = :description,
              "RATINGS" = :ratings::JSON,
              "UPDATED" = :updated,
              "VALID_FROM" = :validFrom,
              "VALID_UNTIL" = :validUntil
            WHERE "NAME" = :name
            """)
    int updateVulnerabilityPolicyByName(@BindBean VulnerabilityPolicy vulnerabilityPolicy);

}
